또 번역부터 해 보자...



FreeRTOS는 임베디드 시스템을 위한 오픈소스 실시간 운영체제이다. FreeRTOS는 다양한 아키텍쳐와 컴파일러 툴체인을 지원하고 "작고, 쉽게 사용"할수 있도록 디자인되었다.

FreeRTOS는 활발히 개발중이고 Richard Barry가 2002년부터 시작했다. 나는 FreeRTOS의 개발에 참여하지 않는 단순한 사용자이고 팬이다. 따라서 이 챕터에서는 FreeRTOS가 다른 챕터에서 왜대한 이야기를 하는 것과 달리, 무엇이고 어떻게 작동하는지에 대해 다룰 예정이다.

다른 운영체제와 같이 FreeRTOS의 주된 일은 tasks를 실행하는 것이다. 대부분의 FreeRTOS의 코드는 우선순위 지정, 스케쥴링, 사용자 작업의 실행과 관련되어 있다.

나는 이 챕터를 끝낼때 독자가 FreeRTOS의 기본 아키텍쳐에 대해 이해하기를 바란다. FreeRTOS의 대부분은 tasks의 실행에 연관되어 있기때문에 독자는 FreeRTOS가 이를 어떻게 이를 수행하는지 정확하게 파악할 수 있을것이다.

만약 이 내용이 처음으로 접하는 운영체제 내부에 대한 이야기라면 OS의 작동에 대한 기본을 배울것이라 기대한다. FreeRTOS는 Windows, Linux, OS X 에 비해 상대적으로 간단하지만 모든 운영체제는 유사한 형태와 목표를 공유한다. 따라서 어떤 운영체제를 살펴봐도 유익하고 흥미로울것이다.

#What's "Embedded" and "Real-Time"?

임베디드와 리얼타임은 사람마다 다르게 정의할 수 있기때문에 FreeRTOS의 방식으로 정의 해 보자.

임베디드 시스템은 TV 리모컨의 시스템, 자동차 GPS, 디지털 시계, 심박동기와 같이 제한된 작업만 수행하도록 디자인된 컴퓨터 시스템이다. 임베디드 시스템은 일반적으로 범용 컴퓨터시스템보다 작고 느리며 저렴하다. 일반적인 저급 임베디드 시스템은 25MHz로 작동하는 8비트 CPU, 수 KB의 램, 32KB정도의 플래쉬 메모리로 구성된다. 상급 임베디드 시스템은 750MHz로 작동하는 32비트 CPU와 GB의 램, 수 GB의 플래쉬 메모리로 구성된다.


Real-time systems are designed to do something within a certain amount of time; they guarantee that stuff happens when it's supposed to.

A pacemaker is an excellent example of a real-time embedded system. A pacemaker must contract the heart muscle at the right time to keep you alive; it can't be too busy to respond in time. Pacemakers and other real-time embedded systems are carefully designed to run their tasks on time, every time.